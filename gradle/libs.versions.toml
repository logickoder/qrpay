[versions]
accompanist = "0.32.0"
compose = "2023.06.01"
compose-compiler = "1.5.3"
gradlePlugin = "8.1.0"
hilt = "2.46.1"
junit = "5.10.0"
jwt = "0.11.5"
kotlin = "1.9.10"
ktor = "2.3.4"
lifecycle = "2.6.1"
room = "2.5.2"

[libraries]
# Accompanist
accompanist-placeholdermaterial = { module = "com.google.accompanist:accompanist-placeholder-material", version.ref = "accompanist" }
# Core
core = "androidx.core:core-ktx:1.10.1"
core-appcompat = "androidx.appcompat:appcompat:1.6.1"
core-constraintlayout = "androidx.constraintlayout:constraintlayout:2.1.4"
core-java8 = "com.android.tools:desugar_jdk_libs:2.0.3"
core-material = "com.google.android.material:material:1.9.0"
# Compose
compose = { group = "androidx.compose", name = "compose-bom", version.ref = "compose" }
compose-activity = "androidx.activity:activity-compose:1.7.2"
compose-constraintlayout = "androidx.constraintlayout:constraintlayout-compose:1.0.1"
compose-custom-view = "androidx.customview:customview:1.2.0-alpha02"
compose-custom-view-pooling = "androidx.customview:customview-poolingcontainer:1.0.0"
compose-material = "androidx.compose.material3:material3:1.2.0-alpha04"
compose-material-icons = { group = "androidx.compose.material", name = "material-icons-extended" }
compose-ui = { group = "androidx.compose.ui", name = "ui" }
compose-ui-test-junit = { group = "androidx.compose.ui", name = "ui-test-junit4" }
compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
# Datastore
datastore = "androidx.datastore:datastore-preferences:1.1.0-alpha04"
# Expresso
expresso = "androidx.test.espresso:espresso-core:3.5.1"
# Hilt
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }
# JUnit
junit = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-android = "androidx.test.ext:junit:1.1.5"
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
# JWT
jwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jwt" }
jwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jwt" }
jwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jwt" }
# Kotlinx
kotlin-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor" }
kotlin-immutable = "org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.5"
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }
kotlin-serialization = "org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0"
# Ktor
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-contentnegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
# Lifecycle
lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
# MockK
mockk = "io.mockk:mockk:1.13.8"
# Napier
napier = "io.github.aakira:napier:2.6.1"
# Postgre
postgre = { module = "org.postgresql:postgresql" }
# Project Reactor
projectreactor = { module = "io.projectreactor.kotlin:reactor-kotlin-extensions" }
projectreactor-test = { module = "io.projectreactor:reactor-test" }
# Room
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
# Spring
spring-acutator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
spring-data = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
spring-devtools = { module = "org.springframework.boot:spring-boot-devtools" }
spring-jackson = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }
spring-security = { module = "org.springframework.boot:spring-boot-starter-security" }
spring-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
spring-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux" }
# Zxing (QR)
zxing-core = "com.google.zxing:core:3.5.2"
zxing-android = "com.journeyapps:zxing-android-embedded:4.3.0"

[plugins]
android-application = { id = "com.android.application", version.ref = "gradlePlugin" }
android-library = { id = "com.android.library", version.ref = "gradlePlugin" }
asciidoctor = { id = "org.asciidoctor.convert", version = "2.4.0" }
graalvm = { id = "org.graalvm.buildtools.native", version = "0.9.27" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version = "1.9.10-1.0.13" }
spring = { id = "org.springframework.boot", version = "3.1.4" }
spring-dependency = { id = "io.spring.dependency-management", version = "1.1.3" }
